
program = <function-decl>
          | <variable-decl>
          | 'struct'
          | 'union'
          | 'const'
          | 'enum'
          
function-decl = TYPE NAME '(' <function_params> ')' '{' <statement> '}'
variable-decl = TYPE NAME ';' 
                | TYPE NAME  '=' <expr>

parens-expr = '(' <expr> ')'

statement = 'return' <expr>? ';'
            | 'if' '(' <cond-expr> ')' '{' <statement> '}'
            | 'if' '(' <cond-expr> ')' '{' <statement> '}' 'else' '{' <statement> '}'
            | 'while' '(' <cond-expr> ')' '{' <statement> '}'
            | 'for' '(' <exp-seq> ';' <cond-expr> ';' <expr-seq>) '{' <statement> '}' 
            | '{' <statement> '}'
            | <expr>

expr = NAME '=' <expr>
       | NAME '(' <argument-list> ')'
       | 

expr-seq = <expr-seq> ',' <expr>
        | <expr>

cond-expr = 